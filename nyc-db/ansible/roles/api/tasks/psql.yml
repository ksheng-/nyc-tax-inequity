---
- name: Create nycdb database user
  become: yes
  become_user: postgres
  vars:
    ansible_ssh_pipelining: true
  postgresql_user: 
    db: "{{ nycdb_database_name}}"
    name: "{{ nycdb_database_user }}" 
    password: "{{ nycdb_database_password }}"
    encrypted: yes
    priv: ALL

- name: create anon postgresql user
  become: yes
  become_user: postgres
  vars:
    ansible_ssh_pipelining: true
  postgresql_user:
    db: "{{ nycdb_database_name }}"
    name: "{{ anon_db_user }}"
    password: "{{ anon_db_password }}"
    priv: CONNECT
    encrypted: yes
    role_attr_flags: NOSUPERUSER,NOCREATEDB
  tags: grant

- name: grant usage on schema public
  become: yes
  become_user: postgres
  vars:
    ansible_ssh_pipelining: true
  postgresql_privs:
    db: "{{ nycdb_database_name }}"
    role: "{{ anon_db_user }}"
    type: schema
    state: present
    privs: USAGE
    objs: public
  tags: grant

- name: grant select privilages for anon PG user
  become: yes
  become_user: postgres
  vars:
    ansible_ssh_pipelining: true
  postgresql_privs:
    db: "{{ nycdb_database_name }}"
    role: "{{ anon_db_user }}"
    type: table
    state: present
    privs: SELECT
    objs: ALL_IN_SCHEMA
  tags: grant

- name: grant anon to nycdb
  become: yes
  become_user: postgres
  vars:
    ansible_ssh_pipelining: true
  postgresql_privs:
    db: "{{ nycdb_database_name }}"
    type: group
    objs: "{{ anon_db_user }}"
    roles: "{{ nycdb_database_user }}"
  tags: grant

- name: ensure anon does not have write permissions
  become: yes
  become_user: postgres
  vars:
    ansible_ssh_pipelining: true
  postgresql_privs:
    db: "{{ nycdb_database_name }}"
    state: absent
    roles: "{{ nycdb_database_user }}"
    privs: INSERT,UPDATE,DELETE,TRUNCATE
    type: table
    objs: ALL_IN_SCHEMA
  tags: grant
